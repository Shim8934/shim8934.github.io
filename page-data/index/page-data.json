{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"766b1c02-cd9c-53a9-b543-508740575975","excerpt":"상속 관계 매핑 1. 관계형 DB에서의 상속 관계? 결론부터 얘기하면, 관계형 DB에서 상속 관계는 존재하지 않는다. 다만, 슈퍼 타입 / 서브 타입 관계라는 모델링 기법이 객체 상속과 유사하다.  그래서 JPA에서의 상속 관계 매핑은 DB에서의 슈퍼 타입, 서브 타입 관계를 매핑하는 것으로 약칭하며 구체적인 방법은 조인 전략, 단일 테이블 전략, 구현 클래스마다 테이블 전략 3가지가 있다. 2. 주요 Annotation Annotation 설명 @Inheritance(strategy = InheritanceType.XXX) 사용할 전략 방법을 명시하며, 3가지가 존재한다.1) JOINED: 조인 전략2) SINGLE_TABLE: 단일 테이블 전략3) TABLE_PER_CLASS: 구현 클래스마다 테이블 전략 @DiscriminatorColumn(name = “DTYPE”) DTYPE, 즉, 상속 받은 객체의 타입이 무엇인지 부모 테이블에서 설명하는 컬럼 (Default - DTY…","frontmatter":{"categories":"JPA_Basic","title":"JPA 기본 강의 정리 - 05. 상속 관계 매핑","date":"January 10, 2022"},"fields":{"slug":"/JPA_Basic05/"}}},{"node":{"id":"6e9775fc-617c-557e-8e83-c4068ce29d6c","excerpt":"다양한 연관관계 매핑 * 연관 관계 매핑 시 고려사항 3가지 다중성 단방향, 양방향 연관 관계의 주인 1. 다중성 유형 Annotation 다대일 @ManyToOne 일대일 @OneToOne (1) 다대일 (@ManyToOne) 외래 키가 있는 쪽이 연관 관계의 주인. 양쪽을 서로 참조하도록 개발 대상 테이블(@OneToMany) 쪽은 mappedBy 속성 필수. (2) 일대일 (@OneToOne) 일대일 관계의 반대는 일대일 주 테이블이나 대상 테이블 중에 외래 키 선택 가능 다대일 양방향 매핑과 동일하게 외래 키가 있는 곳이 연관 관계의 주인. 반대편은 mappedBy 속성 적용. 외래 키에 데이터베이스 유니크 (UNI) 제약 조건 추가 주 테이블에 외래 키 대상 테이블에 외래 키 주 객체가 대상 객체의 참조를 가지는 것처럼 주 테이블에 외래 키를 두고 대상 테이블을 찾음 대상 테이블에 외래키 존재 객체 지향 개발자 선호 전통적인 데이터베이스 개발자 선호 JPA 매핑 편리  장…","frontmatter":{"categories":"JPA_Basic","title":"JPA 기본 강의 정리 - 04. 다양한 연관관계 매핑 핵심 요약","date":"January 09, 2022"},"fields":{"slug":"/JPA_Basic04/"}}},{"node":{"id":"7bd8c570-24fa-5935-89e4-1887ec7e51e6","excerpt":"다양한 연관관계 매핑 기초 들어가기 전에 프로그래머스에서 JPA가 아닌 JDBC Template를 이용한 과제관이 있다. 과제관을 다 풀진 못 했었지만, JPA를 사용하는 근본 목적과 동일한 생각을 경험했다.  → JDBC Template을 사용하면 객체 중심적인 프로그래밍이 아닌 SQL 매퍼로서의 프로그래밍을 하겠끔 된다? 위의 경험으로 이 상황을 연관 관계로 풀어낼 수 있는 지가 JPA를 사용하는 숙련도 판단 근거일 것이라 생각한다. (물론 그 배경으로 관계형 DB 모델에 관한 숙련도가 있겟지만..) 그래서 이번 강의 시간과 차후 강의인 고급 매핑, 상속관계를 나만의 방식으로 체득해야겠다고 다짐했다. 1. 객체와 테이블 연관관계의 차이 다음과 같은 Member, Team 객체가 있고, DB(테이블)에 맞춘 모델링을 한 것이라 가정하자.  * 의문점 Member를 통해 Team 객체의 정보를 얻어오려면 어떤 방식을 거치게 될까? 연관 관계를 생성하지 않고, 객체 모델링이 테이블에…","frontmatter":{"categories":"JPA_Basic","title":"JPA 기본 강의 정리 - 03. 다양한 연관관계 매핑 기초","date":"January 08, 2022"},"fields":{"slug":"/JPA_Basic03/"}}},{"node":{"id":"2bd3a78c-84e5-5683-9054-241312c8105f","excerpt":"엔티티 매핑 - 기본 객체와 테이블 매핑 : @Entity, @Table 필드와 컬럼 매핑 : @Column 기본 키 매핑 : @Id 연관관계 매핑 : @ManyToOne, @JoinColumn 1. @Entity JPA를 사용해서 테이블과 매핑할 클래스에 사용 필수. !주의 2. @Table Entity와 매핑할 테이블 지정 시 사용. 3. Entity의 속성 (테이블 컬럼)  어노테이션 정리 어노테이션 설명 @Column 컬럼 매핑 @Temporal 날짜 타입 매핑 @Enumerated enum 타입 매핑 @Lob BLOB, CLOB 매핑 @Transient 특정 필드를 컬럼에 매핑하지 않음(매핑 무시) 1) @Column 속성 설명 기본값 name 필드와 매핑할 테이블의 컬럼 이름 객체의 필드 이름 insertable,updatable 등록, 변경 가능 여부 TRUE nullable(DDL) null 값의 허용 여부를 설정. false로 설정하면 DDL 생성 시에 not nu…","frontmatter":{"categories":"JPA_Basic","title":"JPA 기본 강의 정리 - 02. 엔티티 기본 매핑","date":"January 07, 2022"},"fields":{"slug":"/JPA_Basic02/"}}},{"node":{"id":"4ed7a110-65f4-5eb6-8091-fca4c16a8a5f","excerpt":"JPA ? JPA의 등장 배경 → Java와  DB(RDBMS) 의 정보 저장 방식의 차이 (1) Java - Java에서 객체는 참조를 사용해 연관 데이터 조회\r\n(2) RDBMS - 테이블에 외래 키를 사용.  즉, 기존의 JDBC Template, Mybatis 등의 기술이 있었음에도 객체 지향적인 프로그래밍이 아닌 SQL 중심적인 개발이 많은 시간과 노력을 들이게 됐다. 앞서 나온 기술들의 SQL 중심적인 개발 요소를 줄이고자 Java Persistence API(이하 JPA) 가 등장하게 됐다. JPA의 특징 1. 영속성 컨텍스트 엔티티를 영구 저장하는 환경 (컨테이너) 1차 캐시 동일성 보장 트랜잭션을 지원하는 쓰기 지연 변경 감지 지연 로딩 1) 1차 캐시 em.persist() 로 객체가 1차 캐시에 저장되지만, DB에 저장된 것은 아니다. → 이후 트랜잭션을 커밋해야 실제로 DB에 객체 관련 쿼리가 입력되고, 그 때 저장된다. 즉, 저장되기 전까진 객체의 상태와 관…","frontmatter":{"categories":"JPA_Basic","title":"JPA 기본 강의 정리 - 01. JPA 사용 이유 & 영속성","date":"January 06, 2022"},"fields":{"slug":"/JPA_Basic01/"}}},{"node":{"id":"1c33a318-3c08-540f-8136-8b376dea5a6f","excerpt":"Bastion Host 역할용 인스턴스 생성 후, 설정 가이드 1. apt 패키지 업데이트 및 시간대 설정 2. kubernetes 설치에 필요한 패키지 및 기타 패키지 설치 진행 zsh를 사용하지 않을 사람이라면  3. 과정은 스킵 3. oh my zsh 설치 (1) Powerlevel10k 테마 (2) autoupdate 플러그인 (3) zsh-syntax-highlighting 플러그인 (4) 접속 유저의 기본 쉘 변경 4. AWS CLI 설치 5. Kubectl 설치 6. eksctl 설치 ~/.zshrc 파일 안에 다음 내용 저장 아래명령 실행 7. AWS IAM 인증 설치 8. AWS 인증정보 등록 (1) 인증정보 생성 및 확인 메뉴  (2) (1)에서 생성한 인증정보 등록 (3) aws sts get-caller-identity 로 입력 정보 확인 (4) ssh-keygen 으로 연결용 key 생성 (5) vimrc 설정 (yaml 파일 문법용) Bastion Host…","frontmatter":{"categories":"EKS","title":"Bastion용 EC2 구성","date":"December 24, 2021"},"fields":{"slug":"/AWS_EKS03/"}}},{"node":{"id":"9a533826-4c1f-50d0-8095-e469dbcd2fe5","excerpt":"들어가기 앞서 진행 중에 필요에 따라 수정이 있었기에, 각 이미지의 태그이름 및 구성 정보가 글내용과 정확히 일치 않는다는 점 유의. * 네트워크 아키텍쳐  1. VPC 생성 ​\t1) 이름 지정 및 IPv4 CIDR 지정 CIDR : 192.168.0.0/16  2. Subnet 구성 ​\t1)서브넷 생성 2a용 public, private 각 1개 2b용 public, private 각 1개  (1) subnet-public-2a : 192.168.0.0/24  |  subnet-private-2a : 192.168.10.0/24 (2) subnet-public-2b : 192.168.1.0/24  |  subnet-private-2b : 192.168.20.0/24 3. 인터넷 게이트웨이 생성 이름 지정하여 생성 후, 우측 상단 작업 → VPC에 연결 → 1) 에서 생성한 VPC로 연결  4. 라우팅 테이블 생성 1.에서 생성한 vpc를 지정  5. 라우팅 테이블에 게이트웨이, …","frontmatter":{"categories":"EKS","title":"EKS용 네트워크 구성 가이드","date":"December 23, 2021"},"fields":{"slug":"/AWS_EKS02/"}}},{"node":{"id":"99f5c2b2-34f7-5ca6-a516-6aed14c8a4a7","excerpt":"EKS 설치 가이드 및 참고 사이트 링크 1. aws CLI Version 2 설치 https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/install-cliv2-linux.html 참고 설치 파일 다운 및 진행 후 실행 권한 부여 2. (기존에 Kubernetes 설치 시 3.으로) kubectl 설치 https://aws-eks-web-application.workshop.aws/ko/30-setting/500-eksctl.html 참고 3. eksctl 설치 https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/eksctl.html 참고 eksctl zsh 명령어 자동 완성 기능 추가 4. AWS IAM 인증 설치 https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/install-aws-iam-authenticator.html 참고 (1) 설…","frontmatter":{"categories":"EKS","title":"Elastic Kubernetes Service 설치 가이드","date":"December 21, 2021"},"fields":{"slug":"/AWS_EKS01/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"심기영","bio":{"role":"개발자","description":["주도적으로 해결하려는","발전 욕구가 강한","돕는 것을 좋아하는"],"thumbnail":"java.png"},"social":{"github":"https://github.com/Shim8934","linkedIn":"","email":"shim8934@gmail.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}